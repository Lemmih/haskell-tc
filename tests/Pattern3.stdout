Bindings:
:: * â†’  *
  data [4mList[0m a = Nil | Cons a (List a)
:: Î›a. Pattern2.List a
  data List a = [4mNil[0m | Cons a (List a)
:: Î›a. a â†’  Pattern2.List a â†’  Pattern2.List a
  data List a = Nil | [4mCons[0m a (List a)
:: âˆ€ a. Pattern2.List a â†’  Pattern2.List a
  [4mdrop1 ( x `Cons` xs) = xs[0m
:: a
  drop1 ( [4mx[0m `Cons` xs) = xs
:: Pattern2.List a
  drop1 ( x `Cons` [4mxs[0m) = xs

Proofs:
coercion: (âˆ€ a. a â†’  Pattern2.List a â†’  Pattern2.List a) @ a
  drop1 ( x [4m`Cons`[0m xs) = xs
coercion: Pattern2.List a
  drop1 ( x `Cons` xs) = [4mxs[0m
