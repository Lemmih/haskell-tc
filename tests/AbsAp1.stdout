Bindings:
:: * â†’  *
  data [4mMaybe[0m a = Just a | Nothing
:: Î›a. a â†’  AbsAp1.Maybe a
  data Maybe a = [4mJust[0m a | Nothing
:: Î›a. AbsAp1.Maybe a
  data Maybe a = Just a | [4mNothing[0m
:: âˆ€ a. a â†’  a
  [4mid x = x[0m
:: a
  id [4mx[0m = x
:: âˆ€ a. AbsAp1.Maybe a â†’  a
  [4mfromJust mb =[0m
  [4m  case mb of[0m
  [4m    Just a -> id a[0m
:: AbsAp1.Maybe a
  fromJust [4mmb[0m =
:: a
      Just [4ma[0m -> id a

Proofs:
coercion: (âˆ€ a. a â†’  AbsAp1.Maybe a) @ a
      [4mJust[0m a -> id a
coercion: a
  id x = [4mx[0m
coercion: AbsAp1.Maybe a
    case [4mmb[0m of
coercion: (âˆ€ a. a â†’  a) @ a
      Just a -> [4mid[0m a
coercion: a
      Just a -> id [4ma[0m
