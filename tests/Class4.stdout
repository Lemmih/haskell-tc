Bindings:
:: *
  data [4mString[0m
:: âˆ€ a. Class4.Show a â‡’ a â†’  Class4.String
    [4mshow[0m :: a -> String
:: âˆ€ a b. Class4.Show a â‡’ a â†’  b â†’  (Class4.String
                                    ,b)
  [4mfn1 x y = (fn2 x, y)[0m
  [4m  where[0m
  [4m    fn2 x = show x[0m
:: a
  fn1 [4mx[0m y = (fn2 x, y)
:: b
  fn1 x [4my[0m = (fn2 x, y)
:: âˆ€ c. Class4.Show c â‡’ c â†’  Class4.String
      [4mfn2 x = show x[0m
:: c
      fn2 [4mx[0m = show x

Proofs:
coercion: (âˆ€ c. Class4.Show c â‡’ c â†’  Class4.String) @ a
  fn1 x y = ([4mfn2[0m x, y)
coercion: a
  fn1 x y = (fn2 [4mx[0m, y)
coercion: b
  fn1 x y = (fn2 x, [4my[0m)
coercion: (âˆ€ a. Class4.Show a â‡’ a â†’  Class4.String) @ c
      fn2 x = [4mshow[0m x
coercion: c
      fn2 x = show [4mx[0m
