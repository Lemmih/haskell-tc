Bindings:
:: *
  data [4mBool[0m = True | False
:: Class5.Bool
  data Bool = [4mTrue[0m | False
:: Class5.Bool
  data Bool = True | [4mFalse[0m
:: âˆ€ a. Class5.Default a â‡’ a
    [4mdef[0m :: a
:: * â†’  *
  data [4mMaybe[0m a = Nothing | Just a
:: Î›a. Class5.Maybe a
  data Maybe a = [4mNothing[0m | Just a
:: Î›a. a â†’  Class5.Maybe a
  data Maybe a = Nothing | [4mJust[0m a

Proofs:
coercion: Class5.Default Class5.Bool
  instance [4mDefault Bool[0m where
coercion: Class5.Bool
    [4mdef = True[0m
coercion: âˆ€ b. Class5.Default b â‡’ Class5.Default (Class5.Maybe b)
  instance [4mDefault b => Default (Maybe b)[0m where
coercion: âˆ€ sk_1_b. Class5.Maybe sk_1_b
    [4mdef = Just def[0m
coercion: Class5.Bool
    def = [4mTrue[0m
coercion: (âˆ€ a. a â†’  Class5.Maybe a) @ sk_1_b
    def = [4mJust[0m def
coercion: (âˆ€ a. Class5.Default a â‡’ a) @ sk_1_b
    def = Just [4mdef[0m
